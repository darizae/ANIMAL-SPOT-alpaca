#!/bin/bash
#SBATCH --job-name=run_benchmark
#SBATCH --partition=kisski
#SBATCH --nodes=1
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=1
#SBATCH --mem=2G
#SBATCH --time=00:30:00
#SBATCH --account=kisski-dpz-alpaca-hum
#SBATCH --output=/user/d.arizaecheverri/u17184/repos/ANIMAL-SPOT-alpaca/BENCHMARK/jobs/run_benchmark_%j.out
#SBATCH --error=/user/d.arizaecheverri/u17184/repos/ANIMAL-SPOT-alpaca/BENCHMARK/jobs/run_benchmark_%j.err
#SBATCH --chdir=/user/d.arizaecheverri/u17184/repos/ANIMAL-SPOT-alpaca

echo "[INFO] Started run_benchmark.batch at $(date)"
echo "[INFO] Current working dir: $(pwd)"
echo "[INFO] Corpus root: $1"
echo "[INFO] Variants JSON: $2"

CORPUS_ROOT="$1"
VARIANTS_JSON="$2"

if [[ -z "$CORPUS_ROOT" || -z "$VARIANTS_JSON" ]]; then
  echo "[ERROR] Usage: sbatch run_benchmark.batch <corpus_root> <variants_json>"
  exit 1
fi

# ── Activate environment ─────────────────────────────────────────────────────
export PATH=/user/d.arizaecheverri/u17184/.project/dir.project/micromamba:$PATH
eval "$(micromamba shell hook --shell=bash)"
micromamba activate /user/d.arizaecheverri/u17184/.project/dir.project/micromamba/envs/animal-spot

# ── Generate configs and batch files ─────────────────────────────────────────
echo "[INFO] Generating configs and batch files..."
python tools/benchmark_factory.py \
       --corpus-root "$CORPUS_ROOT" \
       --variants-json "$VARIANTS_JSON"
STATUS=$?

if [[ $STATUS -ne 0 ]]; then
  echo "[ERROR] benchmark_factory.py failed with exit code $STATUS"
  exit $STATUS
fi

# ── Submit prediction arrays ─────────────────────────────────────────────────
PRED_BATCH="BENCHMARK/jobs/pred_models.batch"
if [[ ! -f "$PRED_BATCH" ]]; then
  echo "[ERROR] $PRED_BATCH not found. Something went wrong during generation."
  exit 1
fi

echo "[INFO] Submitting prediction master batch: $PRED_BATCH"
PRED_SUBMIT_OUTPUT=$(sbatch "$PRED_BATCH")
echo "[INFO] sbatch output: $PRED_SUBMIT_OUTPUT"
PRED_JOBID=$(echo "$PRED_SUBMIT_OUTPUT" | awk '{print $4}')

if [[ -z "$PRED_JOBID" ]]; then
  echo "[ERROR] Failed to extract job ID from prediction sbatch output."
  exit 1
fi

echo "[INFO] Submitted prediction job array with Job ID: $PRED_JOBID"

# ── Submit evaluation arrays with dependency ────────────────────────────────
EVAL_BATCH="BENCHMARK/jobs/eval_models.batch"
if [[ ! -f "$EVAL_BATCH" ]]; then
  echo "[ERROR] $EVAL_BATCH not found. Cannot submit evaluation job."
  exit 1
fi

echo "[INFO] Submitting evaluation job with dependency on prediction Job ID $PRED_JOBID"
EVAL_SUBMIT_OUTPUT=$(sbatch --dependency=afterok:${PRED_JOBID} "$EVAL_BATCH")
echo "[INFO] sbatch output: $EVAL_SUBMIT_OUTPUT"

echo "[INFO] run_benchmark.batch finished at $(date)"
